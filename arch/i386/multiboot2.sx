#include <flags.h>
#ifdef USE_MULTIBOOT_2

#define ASM_FILE 1

#include <multiboot/multiboot.h>

.set HEADER_LEN, 16 + DISPLAY_TAG_SIZE

#ifdef FRAMEBUFFER
.set TAG_FRAMEBUFFER_TYPE, 5
.set TAG_FRAMEBUFFER_FLAGS, 0
.set TAG_FRAMEBUFFER_SIZE, 20
.set TAG_FRAMEBUFFER_WIDTH, 1024
.set TAG_FRAMEBUFFER_HEIGHT, 768
.set TAG_FRAMEBUFFER_DEPTH, 24

.set TAG_FRAMEBUFFER_HEADER, (TAG_FRAMEBUFFER_TYPE << 16 | TAG_FRAMEBUFFER_FLAGS)
#endif

.section .multiboot
.align 4

.set MULTIBOOT_HEADER_SIZE, (multiboot_header_end - multiboot_header_start)

multiboot_header_start:

.long MULTIBOOT2_HEADER_MAGIC
.long GRUB_MULTIBOOT_ARCHITECTURE_I386
.long MULTIBOOT_HEADER_SIZE
.long -(MULTIBOOT2_HEADER_MAGIC + GRUB_MULTIBOOT_ARCHITECTURE_I386 + MULTIBOOT_HEADER_SIZE)

#ifdef FRAMEBUFFER
.long TAG_FRAMEBUFFER_HEADER
.long TAG_FRAMEBUFFER_SIZE
.long TAG_FRAMEBUFFER_WIDTH
.long TAG_FRAMEBUFFER_HEIGHT
.long TAG_FRAMEBUFFER_DEPTH
#endif
multiboot_header_end:

.section .bss
.align 16

stack_bottom:
.skip KERNEL_STACK_SIZE
stack_top:

.section .text
.global _start
.type _start @function

_start:
	mov $stack_top, %esp
	
	call kernel_init
	
	cli
	
	1:
		hlt
		jmp 1b

.size _start, . - _start
#endif
